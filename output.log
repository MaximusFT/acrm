Mean app started on port 3000 (development)
[0mGET / [32m200 [0m688.471 ms - -[0m
[0mGET /system/views/header.html [32m200 [0m145.899 ms - -[0m
[0mGET /mean-admin/views/index.html [32m200 [0m148.773 ms - 751[0m
[0mGET /passmanager/views/passes.html [32m200 [0m149.566 ms - -[0m
[0mGET /mean-admin/assets/img/icons/settings.png [36m304 [0m147.075 ms - -[0m
[0mGET /admin/menu/admin?defaultMenu=%7B%22roles%22:%5B%22admin%22%5D,%22title%22:%22MODULES%22,%22link%22:%22modules%22,%22icon%22:%22mean-admin%2Fassets%2Fimg%2Ficons%2Fmodules.png%22%7D&defaultMenu=%7B%22roles%22:%5B%22admin%22%5D,%22title%22:%22THEMES%22,%22link%22:%22themes%22,%22icon%22:%22mean-admin%2Fassets%2Fimg%2Ficons%2Fthemes.png%22%7D&defaultMenu=%7B%22roles%22:%5B%22admin%22%5D,%22title%22:%22SETTINGS%22,%22link%22:%22settings%22,%22icon%22:%22mean-admin%2Fassets%2Fimg%2Ficons%2Fsettings.png%22%7D [36m304 [0m146.522 ms - -[0m
[0mGET /admin/menu/main [32m200 [0m147.762 ms - 469[0m
[0mGET /mean-admin/assets/img/ninja/ninja.png [36m304 [0m147.825 ms - -[0m
[0mGET /admin/users [36m304 [0m202.244 ms - -[0m
[0mGET /mean-admin/assets/img/icons/modules.png [36m304 [0m154.267 ms - -[0m
[0mGET /mean-admin/assets/img/icons/themes.png [36m304 [0m157.608 ms - -[0m
[0mGET /api/getGroups [36m304 [0m313.338 ms - -[0m
[0mGET /api/requests [36m304 [0m256.518 ms - -[0m
{ _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: false,
     reading: false,
     calledRead: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { close: [Function] },
  _maxListeners: 10,
  socket: 
   { _connecting: false,
     _handle: 
      { fd: null,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 3253,
     _bytesDispatched: 158684,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 2295,
        _bytesDispatched: 136288,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1413886775264,
        _monotonicStartTime: 356046276,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1413886778589,
     _monotonicStartTime: 356049599,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        flush: [Function: noop],
        write: [Function],
        end: [Function: end],
        on: [Function],
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        _render: [Function],
        render: [Function] },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 53282 } },
  connection: 
   { _connecting: false,
     _handle: 
      { fd: null,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 3253,
     _bytesDispatched: 158684,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 2295,
        _bytesDispatched: 136288,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1413886775264,
        _monotonicStartTime: 356046276,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1413886778589,
     _monotonicStartTime: 356049599,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        flush: [Function: noop],
        write: [Function],
        end: [Function: end],
        on: [Function],
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        _render: [Function],
        render: [Function] },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 53282 } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:3000',
     connection: 'keep-alive',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.104 Safari/537.36',
     referer: 'http://localhost:3000/',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8,ru;q=0.6,it;q=0.4',
     cookie: 'mode=Administrator; connect.sid=s%3A0Ld_SPmYFS0qG1gXzMBZfGYne1jumk2n.SKkUuuneGpE%2Bz62FmlIt%2BGdxup1mPfIc%2BHm6liod%2B0g',
     'if-none-match': 'W/"5-fa167d75"' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/api/provideAccess?reqId=54354f73a0f13ef819c8a87e',
  method: 'GET',
  statusCode: null,
  client: 
   { _connecting: false,
     _handle: 
      { fd: null,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 3253,
     _bytesDispatched: 158684,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 2295,
        _bytesDispatched: 136288,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1413886775264,
        _monotonicStartTime: 356046276,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1413886778589,
     _monotonicStartTime: 356049599,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        flush: [Function: noop],
        write: [Function],
        end: [Function: end],
        on: [Function],
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        _render: [Function],
        render: [Function] },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 53282 } },
  _consuming: false,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/provideAccess?reqId=54354f73a0f13ef819c8a87e',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?reqId=54354f73a0f13ef819c8a87e',
     query: 'reqId=54354f73a0f13ef819c8a87e',
     pathname: '/api/provideAccess',
     path: '/api/provideAccess?reqId=54354f73a0f13ef819c8a87e',
     href: '/api/provideAccess?reqId=54354f73a0f13ef819c8a87e',
     _raw: '/api/provideAccess?reqId=54354f73a0f13ef819c8a87e' },
  params: {},
  query: { reqId: '54354f73a0f13ef819c8a87e' },
  res: 
   { domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 3253,
        _bytesDispatched: 158684,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1413886778589,
        _monotonicStartTime: 356049599,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 3253,
        _bytesDispatched: 158684,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1413886778589,
        _monotonicStartTime: 356049599,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: 
      { assets: [Object],
        headerJs: '',
        appName: 'New CRM',
        title: 'New CRM',
        req: [Circular],
        isActive: [Function],
        formatDate: [Function: formatDate],
        formatDatetime: [Function: formatDatetime],
        stripScript: [Function: stripScript],
        createPagination: [Function: createPagination] },
     flush: [Function: noop],
     write: [Function],
     end: [Function: end],
     on: [Function],
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] },
     _render: [Function],
     render: [Function] },
  _startAt: [ 356043, 646243968 ],
  _startTime: Tue Oct 21 2014 13:19:38 GMT+0300 (Финляндия (лето)),
  _remoteAddress: '127.0.0.1',
  secret: undefined,
  cookies: 
   { mode: 'Administrator',
     'connect.sid': 's:0Ld_SPmYFS0qG1gXzMBZfGYne1jumk2n.SKkUuuneGpE+z62FmlIt+Gdxup1mPfIc+Hm6liod+0g' },
  signedCookies: {},
  updateParam: [Function],
  check: [Function],
  checkFiles: [Function],
  checkBody: [Function],
  checkParams: [Function],
  checkQuery: [Function],
  checkHeader: [Function],
  onValidationError: [Function],
  validationErrors: [Function],
  filter: [Function],
  sanitize: [Function],
  assert: [Function],
  validate: [Function],
  body: {},
  originalMethod: 'GET',
  _parsedOriginalUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?reqId=54354f73a0f13ef819c8a87e',
     query: 'reqId=54354f73a0f13ef819c8a87e',
     pathname: '/api/provideAccess',
     path: '/api/provideAccess?reqId=54354f73a0f13ef819c8a87e',
     href: '/api/provideAccess?reqId=54354f73a0f13ef819c8a87e',
     _raw: '/api/provideAccess?reqId=54354f73a0f13ef819c8a87e' },
  sessionStore: 
   { options: 
      { db: 'admin',
        host: '46.36.217.111',
        port: 27017,
        username: 'Nikita',
        password: '65536',
        collection: 'sessions',
        auto_reconnect: true,
        expireAfter: 1209600000,
        stringify: false },
     collectionName: 'sessions',
     db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'admin',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1413886765965,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '0Ld_SPmYFS0qG1gXzMBZfGYne1jumk2n',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true,
        secure: false },
     passport: { user: '5407037e63bfd2d8105d1ac8' } },
  isMobile: false,
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: '5407037e63bfd2d8105d1ac8' } },
  user: 
   { _id: 5407037e63bfd2d8105d1ac8,
     email: 'Exiliot@gmail.com',
     username: 'Exiliot',
     name: 'Nikita Florinsky',
     __v: 3,
     provider: 'local',
     roles: [ 'authenticated', 'admin' ],
     phone: '+380674859812',
     department: [ 'IT Teletrade' ] },
  flash: [Function: _flash],
  route: 
   { path: '/api/provideAccess',
     stack: [ [Object], [Object] ],
     methods: { get: true } } }
[0mGET /api/provideAccess?reqId=54354f73a0f13ef819c8a87e [36m304 [0m181.553 ms - -[0m
{ _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: false,
     reading: false,
     calledRead: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { close: [Function] },
  _maxListeners: 10,
  socket: 
   { _connecting: false,
     _handle: 
      { fd: null,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 3812,
     _bytesDispatched: 158852,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 2295,
        _bytesDispatched: 136288,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1413886775264,
        _monotonicStartTime: 356046276,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1413886780909,
     _monotonicStartTime: 356051923,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        flush: [Function: noop],
        write: [Function],
        end: [Function: end],
        on: [Function],
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        _render: [Function],
        render: [Function] },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 53282 } },
  connection: 
   { _connecting: false,
     _handle: 
      { fd: null,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 3812,
     _bytesDispatched: 158852,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 2295,
        _bytesDispatched: 136288,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1413886775264,
        _monotonicStartTime: 356046276,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1413886780909,
     _monotonicStartTime: 356051923,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        flush: [Function: noop],
        write: [Function],
        end: [Function: end],
        on: [Function],
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        _render: [Function],
        render: [Function] },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 53282 } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:3000',
     connection: 'keep-alive',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.104 Safari/537.36',
     referer: 'http://localhost:3000/',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8,ru;q=0.6,it;q=0.4',
     cookie: 'mode=Administrator; connect.sid=s%3A0Ld_SPmYFS0qG1gXzMBZfGYne1jumk2n.SKkUuuneGpE%2Bz62FmlIt%2BGdxup1mPfIc%2BHm6liod%2B0g',
     'if-none-match': 'W/"7-b894d730"' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/api/rejectRequest?reqId=54355013f3369be81ca819e0',
  method: 'GET',
  statusCode: null,
  client: 
   { _connecting: false,
     _handle: 
      { fd: null,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 3812,
     _bytesDispatched: 158852,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 2295,
        _bytesDispatched: 136288,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1413886775264,
        _monotonicStartTime: 356046276,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1413886780909,
     _monotonicStartTime: 356051923,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        flush: [Function: noop],
        write: [Function],
        end: [Function: end],
        on: [Function],
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        _render: [Function],
        render: [Function] },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 53282 } },
  _consuming: false,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/rejectRequest?reqId=54355013f3369be81ca819e0',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?reqId=54355013f3369be81ca819e0',
     query: 'reqId=54355013f3369be81ca819e0',
     pathname: '/api/rejectRequest',
     path: '/api/rejectRequest?reqId=54355013f3369be81ca819e0',
     href: '/api/rejectRequest?reqId=54355013f3369be81ca819e0',
     _raw: '/api/rejectRequest?reqId=54355013f3369be81ca819e0' },
  params: {},
  query: { reqId: '54355013f3369be81ca819e0' },
  res: 
   { domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 3812,
        _bytesDispatched: 158852,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1413886780909,
        _monotonicStartTime: 356051923,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 3812,
        _bytesDispatched: 158852,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1413886780909,
        _monotonicStartTime: 356051923,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: 
      { assets: [Object],
        headerJs: '',
        appName: 'New CRM',
        title: 'New CRM',
        req: [Circular],
        isActive: [Function],
        formatDate: [Function: formatDate],
        formatDatetime: [Function: formatDatetime],
        stripScript: [Function: stripScript],
        createPagination: [Function: createPagination] },
     flush: [Function: noop],
     write: [Function],
     end: [Function: end],
     on: [Function],
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] },
     _render: [Function],
     render: [Function] },
  _startAt: [ 356045, 972321836 ],
  _startTime: Tue Oct 21 2014 13:19:40 GMT+0300 (Финляндия (лето)),
  _remoteAddress: '127.0.0.1',
  secret: undefined,
  cookies: 
   { mode: 'Administrator',
     'connect.sid': 's:0Ld_SPmYFS0qG1gXzMBZfGYne1jumk2n.SKkUuuneGpE+z62FmlIt+Gdxup1mPfIc+Hm6liod+0g' },
  signedCookies: {},
  updateParam: [Function],
  check: [Function],
  checkFiles: [Function],
  checkBody: [Function],
  checkParams: [Function],
  checkQuery: [Function],
  checkHeader: [Function],
  onValidationError: [Function],
  validationErrors: [Function],
  filter: [Function],
  sanitize: [Function],
  assert: [Function],
  validate: [Function],
  body: {},
  originalMethod: 'GET',
  _parsedOriginalUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?reqId=54355013f3369be81ca819e0',
     query: 'reqId=54355013f3369be81ca819e0',
     pathname: '/api/rejectRequest',
     path: '/api/rejectRequest?reqId=54355013f3369be81ca819e0',
     href: '/api/rejectRequest?reqId=54355013f3369be81ca819e0',
     _raw: '/api/rejectRequest?reqId=54355013f3369be81ca819e0' },
  sessionStore: 
   { options: 
      { db: 'admin',
        host: '46.36.217.111',
        port: 27017,
        username: 'Nikita',
        password: '65536',
        collection: 'sessions',
        auto_reconnect: true,
        expireAfter: 1209600000,
        stringify: false },
     collectionName: 'sessions',
     db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'admin',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1413886765965,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '0Ld_SPmYFS0qG1gXzMBZfGYne1jumk2n',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true,
        secure: false },
     passport: { user: '5407037e63bfd2d8105d1ac8' } },
  isMobile: false,
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: '5407037e63bfd2d8105d1ac8' } },
  user: 
   { _id: 5407037e63bfd2d8105d1ac8,
     email: 'Exiliot@gmail.com',
     username: 'Exiliot',
     name: 'Nikita Florinsky',
     __v: 3,
     provider: 'local',
     roles: [ 'authenticated', 'admin' ],
     phone: '+380674859812',
     department: [ 'IT Teletrade' ] },
  flash: [Function: _flash],
  route: 
   { path: '/api/rejectRequest',
     stack: [ [Object], [Object] ],
     methods: { get: true } } }
[0mGET /api/rejectRequest?reqId=54355013f3369be81ca819e0 [36m304 [0m166.083 ms - -[0m
